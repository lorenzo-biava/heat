heat_template_version: 2013-05-23

description: Simple template to deploy a single compute instance

parameters:
  key_name:
    type: string
    label: Key VM
  vm_name:
    type: string
    label: VM name
  image_id:
    type: string
    label: Image ID
    description: Image to be used for compute instance
  flavor:
    type: string
    label: Instance Type
    description: Type of instance (flavor) to be used
    default: medium.silver
  networks:
    type: json
    description: ID of public (sub) network into which servers get deployed
  availability_zone:
    type: string
    description: The Availability Zone to launch the instance.
    default: nova
  scheduler_hints:
    type: string
    description: The Host Aggregate to launch the instance in form of '{host:myhost}'.
    default: nova
  security_groups:
    type: comma_delimited_list
    description: List of security group names or IDs
    default: [allow_all]

resources:
  my_instance:
    type: OS::Nova::Server
    properties:
      name: { get_param: vm_name }
      key_name: { get_param: key_name }
      image: { get_param: image_id }
      flavor: { get_param: flavor }
      availability_zone: { get_param: availability_zone }
      networks: { get_param: networks }
      security_groups: { get_param: security_groups }
      user_data_format: RAW
      user_data: |
            #!/bin/bash -v

            interfaces=$(ip link show | grep -Eo "[1-9]: [a-z0-9]+:" | grep -Ev "(lo|eth0)" | cut -d: -f2)
           
            for i in ${interfaces[@]}; do
               if [ -e /etc/network/interfaces.d/eth0.cfg ]; then
                  sed "s/eth0/$i/g" /etc/network/interfaces.d/eth0.cfg  > /etc/network/interfaces.d/$i.cfg
               fi
               if [ -e /etc/sysconfig/network-scripts/ifcfg-eth0 ]; then
                  sed "s/eth0/$i/g" /etc/sysconfig/network-scripts/ifcfg-eth0  > /etc/sysconfig/network-scripts/ifcfg-$i
               fi
               ifdown $i; ifup $i
            done
            exit 0


outputs:
  instance_id:
    description: "Resource ID assigned to the newly created instance"
    value:
      get_resource: my_instance

  instance_ips:
    description: The IP address of the deployed instance
    value: { get_attr: [my_instance, networks] }

